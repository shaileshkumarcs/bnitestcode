<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class User extends CI_Controller {

	public function __construct()
    {
        header("Access-Control-Allow-Origin: *");
        parent::__construct();
        $this->load->database();
        $this->load->model('user_model');
    }

    public function index(){
    	$this->load->view('registration');
    }

    public function registration(){
    	$data = json_decode(file_get_contents('php://input'), true);

        $ipdata = json_decode($this->CallAPI("GET", "https://ipinfo.io/161.185.160.93/geo"));

        $check = $this->user_model->check_email('users',array('email'=>$data['email']));
        if($check){
            $response = array('status' => 101, 'msg'=> 'Email already exists!');
        }
        else{
            $userdata = array(
                'title' => $data['title'],
            	'name' => $data['name'],
            	'email' => $data['email'],
            	'gender' => $data['gender'],
            	'faculty' => $data['faculty'],
            	'department' => $data['department'],
                'address' => $ipdata->city.','. $ipdata->country,
            	'created_at' => date('Y-m-d H:i:s'),
            );
            $insert = $this->user_model->insert($userdata);

            if($insert){
                $response = array('status' => 100, 'msg'=> 'User created successfully!');
            }
            else{
                $response = array('status' => 101, 'msg'=> 'Data not inserted!');
            }
        }
        echo json_encode($response);
    	
    }

    public function checkemail(){
    	$email = $this->input->post('email');

    	$check = $this->user_model->check_email('users', array('email'=>$email));

    	if(!$check){
    		$data = array('status' => 200, 'msg' => 'Not exists');
    	}
    	else{
    		$data = array('status' => 200, 'msg' => 'Email already exists!');
    	}
    	echo json_encode($data);
    }

    public function getuserlist(){
        $result = $this->user_model->gettable('users');
        if($result){
            $response = array('status' => 100, 'msg'=> '', 'data' => $result);
        }
        else{
            $response = array('status' => 100, 'msg'=> 'User not found!');
        }
        echo json_encode($response);
    }

    public function delete(){
    
        $id = $_GET['id'];

        $this->user_model->delete(array('id'=> $id));

        if($id){
            $response = array('status' => 100, 'msg'=> 'User deleted');
        }
        else{
            $response = array('status' => 100, 'msg'=> 'User not found!');
        }
        echo json_encode($response);
    }

    function CallAPI($method, $url, $data = false)
    {
        $curl = curl_init();
        switch ($method)
        {
            case "POST":
                curl_setopt($curl, CURLOPT_POST, 1);

                if ($data)
                    curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
                break;
            case "PUT":
                curl_setopt($curl, CURLOPT_PUT, 1);
                break;
            default:
                if ($data)
                    $url = sprintf("%s?%s", $url, http_build_query($data));
        }

        // // Optional Authentication:
        // curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
        // curl_setopt($curl, CURLOPT_USERPWD, "username:password");

        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);

        $result = curl_exec($curl);

        curl_close($curl);

        return $result;
    }
}